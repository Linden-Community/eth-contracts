{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7",
      "txHash": "0x569c61df6a47aa308ba2d9503b1456c66ad86f17bed2b49ffb2182e2a7028aaa",
      "kind": "uups"
    },
    {
      "address": "0x0290FB167208Af455bB137780163b7B7a9a10C16",
      "txHash": "0xc3bcd8b2479ae0bf216506c42cef3acf39c72a559f57b57198ab1b59cce3808d",
      "kind": "uups"
    },
    {
      "address": "0x9b1f7F645351AF3631a656421eD2e40f2802E6c0",
      "txHash": "0xe210aae7681d3879e78069fa8844238211ed2b47431acbe18161deb28fa98961",
      "kind": "uups"
    },
    {
      "address": "0x67B5656d60a809915323Bf2C40A8bEF15A152e3e",
      "txHash": "0x27e1858afb51ab4fe8ea264fd6d5cd20e1210f5cebf18db9a8d5401a8c9f9557",
      "kind": "uups"
    },
    {
      "address": "0x26b4AFb60d6C903165150C6F0AA14F8016bE4aec",
      "txHash": "0x6dd71176b4c97f1e905447e162061ae5f7909c33040923341d548f312d4d65c4",
      "kind": "uups"
    },
    {
      "address": "0x21a59654176f2689d12E828B77a783072CD26680",
      "txHash": "0x648c1301d0e058b0d028d52efa735ca6e45b031b545d604219a2a3ca046b8503",
      "kind": "uups"
    },
    {
      "address": "0x2D8BE6BF0baA74e0A907016679CaE9190e80dD0A",
      "txHash": "0x818ec54e6f94b127ed57a4f05ed302a33bcf6aedbc9d5bdc02996664e43722c1",
      "kind": "uups"
    },
    {
      "address": "0x4bf3A7dFB3b76b5B3E169ACE65f888A4b4FCa5Ee",
      "txHash": "0xa6d248e12cb9c18545c911efa99b0dadaba03cb826d4772134250a9ba82e3b79",
      "kind": "uups"
    },
    {
      "address": "0xFcCeD5E997E7fb1D0594518D3eD57245bB8ed17E",
      "txHash": "0x001e82ae0a1e007b83db54ce12506256db6b55f2ea4393bff75070fbe08fb7b8",
      "kind": "uups"
    },
    {
      "address": "0xc34175A79ACca40392bECD22ff10fAeBFE780Ae7",
      "txHash": "0x52b35bb0ba23072472846eeb1f577fe92d1efa19a3ede4a36d87402990f30dbc",
      "kind": "uups"
    },
    {
      "address": "0xe97DbD7116D168190F8A6E7beB1092c103c53a12",
      "txHash": "0xd2f0898a1d5f84585ae7fb07bb98b9c7837020d63ded87f66ca4809577e7cc7c",
      "kind": "uups"
    },
    {
      "address": "0x1aBE68277AE236083947f2551FEe8b885efCA8f5",
      "txHash": "0x619b763fc1997d4524b8a667314134c50e9c073f4c6f1e75fa4c91029dab0e33",
      "kind": "uups"
    },
    {
      "address": "0xdFccc9C59c7361307d47c558ffA75840B32DbA29",
      "txHash": "0x6108e37ea6b02cc693682e8e108c16d886c261f29efc5710ee1aae5a73a44027",
      "kind": "uups"
    },
    {
      "address": "0xd611F1AF9D056f00F49CB036759De2753EfA82c2",
      "txHash": "0x0b2021c5c891cb99ce15f455b19d14aece6e8f2b9221b948e98337784c927b76",
      "kind": "uups"
    },
    {
      "address": "0x995629b19667Ae71483DC812c1B5a35fCaaAF4B8",
      "txHash": "0xcbe8677b936df08664b7051758e14cd427c1e25e0065ac75050e2826d1defbbb",
      "kind": "uups"
    },
    {
      "address": "0x3F4E941ef5071a1D09C2eB4a24DA1Fc43F76fcfF",
      "txHash": "0x00e3215eb00ea3a967d56fb42ebf7b3ea185ceb74e9215ddea6245cc76b1afce",
      "kind": "uups"
    },
    {
      "address": "0xEdCD6442143188Deb586e182B7900dFb8707Bc27",
      "txHash": "0xb88e016312afb6de3d2b910e8b4d4c946a57c9c59cf12662af6e3363bb893754",
      "kind": "uups"
    },
    {
      "address": "0x81920CAF1F99Bb0f7D72Fdfba840cff21d63CcC5",
      "txHash": "0x02e91d797c16b367fbb37280a25fc7477a1cbb020f456a23bc06c35766ce7021",
      "kind": "uups"
    },
    {
      "address": "0x8b9e409a817c7dC1a42C3DDe9E85dcBFF602c0fC",
      "txHash": "0xf2520ed0d39931d23dc67d2ed2f9490ff28bdc37d09bea20478354d9307a3054",
      "kind": "uups"
    },
    {
      "address": "0xcCf27643fa6C4FC844a8945b7c2F8bd562153649",
      "txHash": "0x2221f75665f3c1ac274f3e599d97ed20e2b507728ca3f76cdf6c357b608aecf1",
      "kind": "uups"
    },
    {
      "address": "0x49de73CaB6e369f1F97Def0b95b558cd77c5d6a2",
      "txHash": "0x6f96738bf413a61541dbcb9ba80b61c3c90efc4f577c89e610883d4703b7423d",
      "kind": "uups"
    },
    {
      "address": "0x8E7a8d3CAeEbbe9A92faC4db19424218aE6791a3",
      "txHash": "0x407d49cf3244341ba5b3b058ec3f6342f72108dbf479f5727617e25abeefbec9",
      "kind": "uups"
    },
    {
      "address": "0x6FdB1c9e1a1A8beD2EE22a3d5E62CA330ee88ecb",
      "txHash": "0x980686508068d7775f1337d61ee56f78d29f4f80cbee46358b4d964fa085dce6",
      "kind": "uups"
    },
    {
      "address": "0x9e8efB8C27f3012493ce315974A64CAcDE6f4ccC",
      "txHash": "0x67f3577adbd55ee13883873ec24975e3a13208a4e5b0ba5da26fbafff3ada975",
      "kind": "uups"
    },
    {
      "address": "0x97bd553f21B175F7CC00819cC6494a7FbA344180",
      "txHash": "0xf5a4f2b541cbb81743f37bef2c1ebb175a50038b432b062bf8438891dedf9921",
      "kind": "uups"
    },
    {
      "address": "0x768b5Faed6DC69816f33377d214ffaf00dcDd0cf",
      "txHash": "0xa0034ad75c4181332c8714f58d178e544792482f52ebf5b989405a51e744ffc3",
      "kind": "uups"
    },
    {
      "address": "0xC89Ce4735882C9F0f0FE26686c53074E09B0D550",
      "txHash": "0x31e25ec477ed6c7f77570a3713b9d868dd98e969191712eceb5626166e8d2b40",
      "kind": "uups"
    },
    {
      "address": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
      "txHash": "0x1ea835107c746228048926e99acb6592aedcc974ddcfba558bed9f4222fce7a2",
      "kind": "uups"
    },
    {
      "address": "0xA57B8a5584442B467b4689F1144D269d096A3daF",
      "txHash": "0x76323c338ec317dc33007e73b5c84cb1a6d9fa1d6b1ae2ea5e0af2ea1818fc43",
      "kind": "uups"
    },
    {
      "address": "0x6eD79Aa1c71FD7BdBC515EfdA3Bd4e26394435cC",
      "txHash": "0x1674dffea6670e2abde80efb135a8ebc1f85737aff379b84657145b43ba8f5ec",
      "kind": "uups"
    },
    {
      "address": "0xaD888d0Ade988EbEe74B8D4F39BF29a8d0fe8A8D",
      "txHash": "0x943ebc1f64e6ff293150652ab2059b88bd3bd5ce7e1f7cff285c2746cc5b47e1",
      "kind": "uups"
    },
    {
      "address": "0x59d3631c86BbE35EF041872d502F218A39FBa150",
      "txHash": "0x10c02a7c2de2f4ba1908fe5d86a32082f0b0468e084c740305ba4bfade70f616",
      "kind": "uups"
    },
    {
      "address": "0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15",
      "txHash": "0xe46790c30a3bf8a87bfb8bf64d589515eea54e5ddd608e68fdbecb9caff52362",
      "kind": "uups"
    },
    {
      "address": "0x5f8e26fAcC23FA4cbd87b8d9Dbbd33D5047abDE1",
      "txHash": "0xfd28b71611378e195f4499fe16ca44acca3fa39857c640b1174bb38266fe95e6",
      "kind": "uups"
    },
    {
      "address": "0x7C728214be9A0049e6a86f2137ec61030D0AA964",
      "txHash": "0x70c105dddfd5b59eaf5792884d571f04aaa45e91ff789fc959b0ad310fd91513",
      "kind": "uups"
    },
    {
      "address": "0x970e8f18ebfEa0B08810f33a5A40438b9530FBCF",
      "txHash": "0x3d8129b8e293940435e66a8bcb34f69c08ec0133a7c7c357767d9f42977da9ae",
      "kind": "uups"
    },
    {
      "address": "0x22d5C8BdD4346b390014a07109a8F830094d4abf",
      "txHash": "0x1c86708745d69aebe1d6725fbf2de5d121431c685775fe6ef4f38d8dc10eb21a",
      "kind": "uups"
    },
    {
      "address": "0x4339316e04CFfB5961D1c41fEF8E44bfA2A7fBd1",
      "txHash": "0x04850c3a2accc131e4b2aa61e34acf7272314c24f9c219217e9a3330b4032efb",
      "kind": "uups"
    },
    {
      "address": "0xCeeFD27e0542aFA926B87d23936c79c276A48277",
      "txHash": "0xca75e6ab2228d07dd06cd9b265f26d2a21d56b4702994bce83402a1c23cd9e5b",
      "kind": "uups"
    },
    {
      "address": "0xF16165f1046f1B3cDB37dA25E835B986E696313A",
      "txHash": "0x008355811f36a4ad6395676d0bdab4144d75f6a42cef687363f74ead2bb0a4c1",
      "kind": "uups"
    },
    {
      "address": "0x2f3efA6bbDC5fAf4dC1a600765c7B7829e47bE10",
      "txHash": "0x7dc46dda1211ec103590cdbcafbcc39a3c00ccd7ff34471331b9e91f34ffdd12",
      "kind": "uups"
    },
    {
      "address": "0xfE82e8f24A51E670133f4268cDfc164c49FC3b37",
      "txHash": "0xd34a4b69dfc65ffe16fde0565636c676a742839bf2d330ea38a9a088c6850447",
      "kind": "uups"
    },
    {
      "address": "0x42D4BA5e542d9FeD87EA657f0295F1968A61c00A",
      "txHash": "0x552cd5306112c7f136cfc34887edf03bc705d28b6ee40a296016784cd122f105",
      "kind": "uups"
    },
    {
      "address": "0x25D02115bd67258a406A0F676147E6C3598a91a9",
      "txHash": "0xa256a6daf098da032eaf1eab7d110571f828bc339ed51c7186768b57c58113ca",
      "kind": "uups"
    },
    {
      "address": "0xd45A464a2412A2f83498d13635698a041b9dBe9b",
      "txHash": "0x2bcbfbf354b4e6e51418dfbb1409f6b14a1c6e1f42b13ecbca84a0cde94ded07",
      "kind": "uups"
    },
    {
      "address": "0xEd447aCB0CEb49d77f317dD6D37CB64da7a7E7F8",
      "txHash": "0x858ccd17d817ba108268b94342adbc68bd38a89dc38cb02c4e595aaac278af34",
      "kind": "uups"
    },
    {
      "address": "0xb111Ded3F2e4012C0B85D930Fda298693D0DA0B2",
      "txHash": "0x6fcda056860ed6108510ad291ca47ebca7ceb90a7fc37faea37f0374700da338",
      "kind": "uups"
    },
    {
      "address": "0xe6dA6E31540239b4a09eC574f147004D50f1b140",
      "txHash": "0x159f2f234de777f540651b9d103e81f26aa6fcd9b52afb2e51a529b7e4fd387a",
      "kind": "uups"
    },
    {
      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
      "txHash": "0x653dcfaa84296eabf37690d1fd9baece499a0e6d57751f6e32d588ca0f5a5957",
      "kind": "uups"
    }
  ],
  "impls": {
    "256230debac46d4248606b997af0cc28da90866ac8e728d56930095e624242d5": {
      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
      "txHash": "0x8851078ba32c9d87a8d1cb97b8f24ddf56e32c8c791da7f7c55dcf05a9b41f2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:15"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "cba85e9a007cdf5f2462263d404b1f565e9d53256e26c9b6834b4b4d84d84f1c": {
      "address": "0x4bf749ec68270027C5910220CEAB30Cc284c7BA2",
      "txHash": "0x0d8d6f8b2e822b2656471a5e45f52535a7719d920176db29003f034295eb970a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:15"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "b01b229e6808a173a79057098805a4beb6575722e6cfb58cf160ca867db8b7c5": {
      "address": "0xe982E462b094850F12AF94d21D470e21bE9D0E9C",
      "txHash": "0x205d8c40d07b13da9d5192d076c897d0a13d75eb9141ac8649d4752d10a5f910",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "eedd5bd9793cbb090bd79ce12dc952c38eae55bc7169582b639ed2bab3706504": {
      "address": "0x2D8BE6BF0baA74e0A907016679CaE9190e80dD0A",
      "txHash": "0x8fbaa3c5b32e2ac53bee61d3f4239e10b36d5f947900a259d2a245948be7c5e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "fe0153cb0ab6a3129e67e956bd61d3718260fd3ec5923a41497945726ad052a0": {
      "address": "0x1b88Bdb8269A1aB1372459F5a4eC3663D6f5cCc4",
      "txHash": "0x799814e44f7e72a6484193645338bf54bc2ed38cb1a3c2311ed427d47cf77411",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "6d95e48ce9d0cb4a09465cb7b2f76bcfc6099972adec3a99c37debb30312cbe3": {
      "address": "0xe97DbD7116D168190F8A6E7beB1092c103c53a12",
      "txHash": "0x105455139365c3dddf9e44fe84a674e1e999fd63fffe3d8a4ba08d6ae2a5b80f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "fa01d57fdc91cb98a4a7e050099ef1f0f7dff51b5a71cff1acdb57a2d3713352": {
      "address": "0x2c5f3c004878923f55A2a255F89Fe29393177509",
      "txHash": "0x5ee43adc50398d0f217bbfe7fed00bd33180861786de984bb4df672ef0eda2a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "af7caa570b378b11a12b4561d4292ce5d095df0ea92774237c4df2538bab3d6f": {
      "address": "0xe93e3B649d4E01e47dd2170CAFEf0651477649Da",
      "txHash": "0xb19568f6f50459d554cb939ccca26a0217b43a173e199e41eba40bab784b00bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "8ccee4bca878973511dfbdf0f18c5ae36e12868171945b26ab505bec3c6e5fc4": {
      "address": "0x8be8DFCDC90F50562b5022DE1f8D83fe93b0b055",
      "txHash": "0xba78a3b5b2947c47173d8c31ce011d0b91fe95c3dea6aaaf7c649fad9d0655b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "11d19afa5a97127b617dd504342ae4cd159613652d2f4f9aeedebbdf15b72ee3": {
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "txHash": "0xc9af1ba7c3c5d8581778e1abea121338d8350cefb4daddcb060454fa4f0ac631",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:83"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CataDidNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)2500_storage",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:21"
          },
          {
            "contract": "CataDidNFT",
            "label": "_did2tokenId",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:24"
          },
          {
            "contract": "CataDidNFT",
            "label": "_address2tokenId",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\project:\\contracts\\CataDidNFT.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)2500_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
